digraph functioncalls {
rankdir=LR;

main [shape="box", color=blue];
malloc [label="malloc", shape="box", color=grey];
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_64_bad -> malloc;
memset [label="memset", shape="box", color=grey];
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_64_bad -> memset;
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_64b_badSink [label="CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_64b_badSink", ];
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_64_bad -> CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_64b_badSink;
ldv_exit_1 [label="ldv_exit_1", ];
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_64_bad -> ldv_exit_1;
ldv_strlen_1 [label="ldv_strlen_1", ];
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_64b_badSink -> ldv_strlen_1;
memmove [label="memmove", shape="box", color=grey];
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_64b_badSink -> memmove;
printLine [label="printLine", ];
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_64b_badSink -> printLine;
free [label="free", shape="box", color=grey];
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_64b_badSink -> free;
abort [label="abort", shape="box", color=grey];
assume_abort_if_not -> abort;
__ctype_b_loc [label="__ctype_b_loc", shape="box", color=grey];
decodeHexChars -> __ctype_b_loc;
sscanf [label="sscanf", shape="box", color=grey];
decodeHexChars -> sscanf;
iswxdigit [label="iswxdigit", shape="box", color=grey];
decodeHexWChars -> iswxdigit;
swscanf [label="swscanf", shape="box", color=grey];
decodeHexWChars -> swscanf;
rand [label="rand", shape="box", color=grey];
globalReturnsTrueOrFalse -> rand;
pthread_exit [label="pthread_exit", shape="box", color=grey];
internal_start -> pthread_exit;
ldv_undef_int [label="ldv_undef_int", ];
ldv_asprintf -> ldv_undef_int;
ldv_xmalloc [label="ldv_xmalloc", ];
ldv_asprintf -> ldv_xmalloc;
ldv_undef_int_positive [label="ldv_undef_int_positive", ];
ldv_asprintf -> ldv_undef_int_positive;
ldv_reference_calloc [label="ldv_reference_calloc", ];
ldv_calloc -> ldv_reference_calloc;
reach_error [label="reach_error", ];
ldv_error -> reach_error;
assume_abort_if_not [label="assume_abort_if_not", ];
ldv_exit -> assume_abort_if_not;
ldv_exit [label="ldv_exit", ];
ldv_exit_1 -> ldv_exit;
ldv_reference_free [label="ldv_reference_free", ];
ldv_free -> ldv_reference_free;
ldv_reference_malloc [label="ldv_reference_malloc", ];
ldv_malloc -> ldv_reference_malloc;
ldv_reference_realloc [label="ldv_reference_realloc", ];
ldv_realloc -> ldv_reference_realloc;
calloc [label="calloc", shape="box", color=grey];
ldv_reference_calloc -> calloc;
ldv_reference_free -> free;
ldv_reference_malloc -> ldv_undef_int;
ldv_reference_malloc -> malloc;
ldv_reference_malloc -> assume_abort_if_not;
ldv_reference_realloc -> ldv_undef_int;
ldv_reference_realloc -> malloc;
ldv_reference_realloc -> assume_abort_if_not;
memcpy [label="memcpy", shape="box", color=grey];
ldv_reference_realloc -> memcpy;
ldv_reference_realloc -> free;
ldv_reference_xmalloc -> malloc;
ldv_reference_xmalloc -> assume_abort_if_not;
ldv_reference_xzalloc -> calloc;
ldv_reference_xzalloc -> assume_abort_if_not;
ldv_reference_zalloc -> calloc;
ldv_strlen [label="ldv_strlen", ];
ldv_strcpy -> ldv_strlen;
ldv_strcpy -> memcpy;
ldv_strdup -> ldv_undef_int;
ldv_strdup -> ldv_strlen;
ldv_strdup -> ldv_xmalloc;
ldv_strdup -> memcpy;
ldv_strlen_1 -> ldv_strlen;
__VERIFIER_nondet_int [label="__VERIFIER_nondet_int", shape="box", color=grey];
ldv_undef_int -> __VERIFIER_nondet_int;
ldv_undef_int_negative -> ldv_undef_int;
ldv_undef_int_negative -> assume_abort_if_not;
ldv_undef_int_nonpositive -> ldv_undef_int;
ldv_undef_int_nonpositive -> assume_abort_if_not;
ldv_undef_int_positive -> ldv_undef_int;
ldv_undef_int_positive -> assume_abort_if_not;
__VERIFIER_nondet_long [label="__VERIFIER_nondet_long", shape="box", color=grey];
ldv_undef_long -> __VERIFIER_nondet_long;
__VERIFIER_nondet_uint [label="__VERIFIER_nondet_uint", shape="box", color=grey];
ldv_undef_uint -> __VERIFIER_nondet_uint;
__VERIFIER_nondet_ulong [label="__VERIFIER_nondet_ulong", shape="box", color=grey];
ldv_undef_ulong -> __VERIFIER_nondet_ulong;
__VERIFIER_nondet_ulonglong [label="__VERIFIER_nondet_ulonglong", shape="box", color=grey];
ldv_undef_ulonglong -> __VERIFIER_nondet_ulonglong;
ldv_reference_xmalloc [label="ldv_reference_xmalloc", ];
ldv_xmalloc -> ldv_reference_xmalloc;
ldv_reference_xzalloc [label="ldv_reference_xzalloc", ];
ldv_xzalloc -> ldv_reference_xzalloc;
ldv_reference_zalloc [label="ldv_reference_zalloc", ];
ldv_zalloc -> ldv_reference_zalloc;
time [label="time", shape="box", color=grey];
main -> time;
srand [label="srand", shape="box", color=grey];
main -> srand;
main -> printLine;
CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_64_bad [label="CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_64_bad", ];
main -> CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_64_bad;
puts [label="puts", shape="box", color=grey];
printBytesLine -> puts;
printf [label="printf", shape="box", color=grey];
printBytesLine -> printf;
printDoubleLine -> printf;
printFloatLine -> printf;
printHexCharLine -> printf;
printHexUnsignedCharLine -> printf;
printIntLine -> printf;
printLine -> printf;
printLongLine -> printf;
printSizeTLine -> printf;
printStructLine -> printf;
printUnsignedLine -> printf;
wprintf [label="wprintf", shape="box", color=grey];
printWLine -> wprintf;
printWcharLine -> printf;
__assert_fail [label="__assert_fail", shape="box", color=grey];
reach_error -> __assert_fail;
stdThreadCreate -> malloc;
pthread_create [label="pthread_create", shape="box", color=grey];
stdThreadCreate -> pthread_create;
stdThreadCreate -> free;
internal_start [label="internal_start", ];
stdThreadCreate -> internal_start [style="dashed" label="pthread_create"];
stdThreadDestroy -> free;
pthread_join [label="pthread_join", shape="box", color=grey];
stdThreadJoin -> pthread_join;
pthread_mutex_lock [label="pthread_mutex_lock", shape="box", color=grey];
stdThreadLockAcquire -> pthread_mutex_lock;
stdThreadLockCreate -> malloc;
pthread_mutex_init [label="pthread_mutex_init", shape="box", color=grey];
stdThreadLockCreate -> pthread_mutex_init;
stdThreadLockCreate -> free;
pthread_mutex_destroy [label="pthread_mutex_destroy", shape="box", color=grey];
stdThreadLockDestroy -> pthread_mutex_destroy;
stdThreadLockDestroy -> free;
pthread_mutex_unlock [label="pthread_mutex_unlock", shape="box", color=grey];
stdThreadLockRelease -> pthread_mutex_unlock;
}
